{"version":3,"file":"time-control.js","sources":["../../src/components/time-control.hbs","../../src/components/time-control.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"<div class=\\\"eat-time-control\\\">\\n  <div>\\n    <label>Speed {{-eat-rounded this.speedPercent}}%</label>\\n    <div>\\n      <div class=\\\"eat-time-control--tick-marks\\\">\\n        {{#each this.tickMarks as |tickMark|}}\\n          {{! template-lint-disable no-inline-styles }}\\n          <div style={{tickMark.position}} role=\\\"button\\\" {{on \\\"click\\\" (fn this.tickMarkChosen tickMark)}}>\\n            <span>{{tickMark.text}}</span>\\n          </div>\\n        {{/each}}\\n      </div>\\n      <input\\n        class=\\\"eat-time-control--slider\\\"\\n        type=\\\"range\\\"\\n        value={{this.logSpeed}}\\n        min=\\\"0\\\"\\n        max=\\\"200\\\"\\n        step=\\\"1\\\"\\n        aria-label=\\\"Speed slider\\\"\\n        oninput={{this.updateLogSpeed}}\\n      >\\n    </div>\\n  </div>\\n</div>\")","import Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport TimeControl from 'ember-animated/test-support/time-control';\nimport { action } from '@ember/object';\nimport { htmlSafe } from '@ember/template';\nimport { task } from 'ember-animated';\nimport { inject } from '@ember/service';\n\nfunction toLogSpeed(speedPercent) {\n  let percent = speedPercent;\n  if (percent <= 1) {\n    // Log of zero is infinity. Log of 1% is as low as we go, which\n    // counts as paused for us.\n    percent = 1;\n  }\n  return (200 * Math.log(percent)) / Math.log(200);\n}\n\nfunction fromLogSpeed(logSpeed) {\n  let percent = Math.exp((Math.log(200) * logSpeed) / 200);\n  if (percent <= 1) {\n    percent = 0;\n  }\n  return percent;\n}\n\nexport default class TimeControlComponent extends Component {\n  @tracked speedPercent = 100;\n  @inject('-ea-motion') motionService;\n\n  get logSpeed () {\n    return toLogSpeed(this.speedPercent);\n  }\n\n  tickMarks = [\n    { value: 0, text: 'Paused' },\n    { value: 5, text: '5%' },\n    { value: 10, text: '10%' },\n    { value: 25, text: '25%' },\n    { value: 50, text: '50%' },\n    { value: 100, text: '100%' },\n  ].map((entry) => {\n    entry.position = htmlSafe(`left: ${toLogSpeed(entry.value) / 2}%`);\n    return entry;\n  });\n\n  // didInsertElement() {\n  //   // weirdly, ember is not initializing this for me correctly\n  //   this.element.querySelector('input').value = this.logSpeed;\n  // }\n\n  willDestroy() {\n    super.willDestroy();\n\n    if (this.time) {\n      this.time.finished();\n      this.time = null;\n    }\n  }\n\n  @action updateLogSpeed(event) {\n    this._setSpeed(fromLogSpeed(event.target.valueAsNumber));\n  }\n\n  @action tickMarkChosen(tickMark) {\n    this._setSpeed(tickMark.value);\n  }\n\n  _setSpeed(speed) {\n    this._speedSetter.perform(speed);\n  }\n\n  @task(function* (speed) {\n    if (speed === 100) {\n      // at normal speed, we want to disable our time control\n      // entirely. This means we won't intefere with things like\n      // acceptance tests that may already want to take over the\n      // timing.\n      //\n      // But if there's an animation in progress, we must wait until\n      // it's done. Otherwise there will be a jarring jump from our\n      // fake time to the real time.\n      if (this.time) {\n        this.time.runAtSpeed(1);\n        this.speedPercent = speed;\n        yield this.motionService.waitUntilIdle?.perform();\n        this.time.finished();\n        this.time = null;\n      }\n    } else {\n      if (!this.time) {\n        this.time = new TimeControl();\n      }\n      if (speed === 0) {\n        this.time.pause();\n      } else {\n        this.time.runAtSpeed(speed / 100);\n      }\n      this.speedPercent = speed;\n    }\n  }).restartable()\n  _speedSetter\n}\n"],"names":["toLogSpeed","speedPercent","percent","Math","log","fromLogSpeed","logSpeed","exp","TimeControlComponent","Component","g","this","prototype","tracked","i","void 0","inject","tickMarks","value","text","map","entry","position","htmlSafe","willDestroy","time","finished","updateLogSpeed","event","_setSpeed","target","valueAsNumber","n","action","tickMarkChosen","tickMark","speed","_speedSetter","perform","task","runAtSpeed","motionService","waitUntilIdle","TimeControl","pause","restartable","setComponentTemplate","TEMPLATE"],"mappings":"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"}